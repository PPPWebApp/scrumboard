service cloud.firestore {
  match /databases/{database}/documents {
  

    // // only admins can change team settings
    // match /teams/{teamID} {
    // 	allow read: if isMemberOfTeam(teamId);
    // 	allow write: if isAdmin();
    // }
    
    // // public if 
    // match /teams/{teamID}/boards/{boardID} {
  	// 	allow read: if isMemberOfTeam(teamId) || boardIsPublic();
    //   allow write: if isMemberOfTeam(teamId);
    // }
    
    function isMemberOfTeam(teamId) {
    	return get(/databases/{database}/documents/teams/$(teamId)).data.members[request.auth.uid].isMember;
    }
    
    function isAdmin() {
    	return existingData().members[request.auth.uid].isAdmin;
    }
    
    function boardIsPublic() {
    	return existingData().isPublic;
    }
    
  	function isSignedIn() {
    	return request.auth.uid != null;
    }
    
    function existingData() {
    	return resource.data;
    }
    
    function incomingData() {
    	return request.resource.data;
    }

    // Users can only access their team
    // Neds to be updated when sharing link
      //Works, but throws error in console
      match /teams/{teamID} {
         allow read, write: if get(/databases/$(database)/documents/teams/$(teamID)).data.members[request.auth.uid].isMember == true;
       }
       match /teams/{teamID}/{document=**} {
         allow read, write: if get(/databases/$(database)/documents/teams/$(teamID)).data.members[request.auth.uid].isMember == true;
       }


    // Members can only be added if they do not exist first
   // match /teams/{teamID} {
   //   allow read, write: if 
   // }

    // All users must be authenticated
    // match /{document=**)} Â {
    //   allow read, write: if request.auth.uid != null;
    // }
		
  }
}
// /teams/imtaPFFgbkn5PrLzwzis/boards/ZJNibiSJpipuBxFXUCzz
// XD6EkNokYXV3XTtW2UZys2FtcXI3